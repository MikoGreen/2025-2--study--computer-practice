---
## Author
author:
  name: Надежда Александровна Рогожина
  email: 1132222840@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: Лабораторная работа №1
subtitle: Компьютерный практикум по статистическому анализу
license: CC BY
date: today
date-format: "2025-09-13"
---

# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Рогожина Надежда Александровна
  * студентка 4 курса НФИбд-02-22
  * Российский университет дружбы народов им. П. Лумумбы
  * [1132222840@rudn.ru](mailto:1132222840@rudn.ru)
  * <https://MikoGreen.github.io/ru/>

:::
::: {.column width="30%"}

:::
::::::::::::::

# Введение

## Цель работы

Основная цель работы — подготовить рабочее пространство и инструментарий для работы с языком программирования Julia, на простейших примерах познакомиться с основами синтаксиса Julia.

## Задание

1. Установите под свою операционную систему Julia, Jupyter (разделы 1.3.1 и 1.3.2).
2. Используя Jupyter Lab, повторите примеры из раздела 1.3.3.
3. Выполните задания для самостоятельной работы (раздел 1.3.4).

## Теоретическое введение

Научные вычисления традиционно требуют высочайшей производительности, однако эксперты по доменам в значительной степени перенесены на более медленные динамические языки для ежедневной работы. К счастью, методы современного языка и компилятора позволяют в основном устранить компромисс производительности и обеспечивать достаточно продуктивную среду для прототипирования и достаточно эффективно для развертывания применений, интенсивных производительности. Язык программирования Julia заполняет эту роль: это гибкий динамический язык, подходящий для научных и численных вычислений, с производительностью, сравнимой с традиционными статичными языками.

# Выполнение лабораторной работы

## Подготовка
 
Прежде всего, был запущен `Jupyter Notebook` с уже установленной на него Julia.

![cmd](image/1.png){#fig-001 width=70%} 

## Подготовка

Далее, в рамках вспоминания основных команд – выведена дата и текущий пользователь.

![whoami](image/2.png){#fig-002 width=70%}

## Задание 1

Изучите документацию по основным функциям Julia для чтения / записи / вывода информации на экран: `read()`, `readline()` и `readlines()`, `readdlm()`, `print()` и `println()`, `show()`, `write()`. Приведите свои примеры их использования, поясняя особенности их применения. 

## Задание 1

![read + примеры](image/3.png){#fig-003 width=50%}

## Задание 1

![write + примеры](image/4.png){#fig-004 width=70%}

## Задание 1

![readline + readlines + примеры](image/5.png){#fig-005 width=70%}

## Задание 1

![readdlm + примеры](image/6.png){#fig-006 width=45%}

## Задание 1

![print + println + примеры](image/7.png){#fig-007 width=45%}

## Задание 1

![show + примеры](image/8.png){#fig-008 width=70%}

## Задание 2

Изучите документацию по функции `parse()`. Приведите свои примеры её использования, поясняя особенности её применения. 

## Задание 2

![parce](image/9.png){#fig-009 width=50%}

## Задание 3

Изучите синтаксис Julia для базовых математических операций с разным типом переменных: сложение, вычитание, умножение, деление, возведение в степень, извлечение корня, сравнение, логические операции. Приведите свои примеры с пояснениями по особенностям их применения. 

## Задание 3

![Основные математические операции](image/10.png){#fig-010 width=45%}

## Задание 4 

Приведите несколько своих примеров с пояснениями с операциями над матрицами и векторами: создание, сложение, вычитание, скалярное произведение, транспонирование, умножение на скаляр.

## Задание 4 

![Создание матриц, умножение на скаляр](image/11.png){#fig-011 width=45%}

## Задание 4 

![Операции с матрицами](image/12.png){#fig-012 width=45%}

# Выводы

## Выводы

В ходе работы был установлен я.п. Julia на Jupyter Notebook, освоены основные функции любого я.п. (read, print, write, show), а также основные математические операции со скалярами, векторами и матрицами.
